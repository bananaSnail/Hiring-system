<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smsm.mapper.ResumeMapper">
  <resultMap id="BaseResultMap" type="com.smsm.pojo.Resume">
    <id column="resume_id" jdbcType="VARCHAR" property="resumeId" />
    <result column="job_seeker_id" jdbcType="VARCHAR" property="jobSeekerId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="phone" jdbcType="INTEGER" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="education" jdbcType="CHAR" property="education" />
    <result column="exception_job" jdbcType="VARCHAR" property="exceptionJob" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.smsm.pojo.Resume">
    <result column="job_exp" jdbcType="LONGVARCHAR" property="jobExp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    resume_id, job_seeker_id, name, sex, age, phone, email, education, exception_job
  </sql>
  <sql id="Blob_Column_List">
    job_exp
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.smsm.pojo.ResumeExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.smsm.pojo.ResumeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from resume
    where resume_id = #{resumeId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from resume
    where resume_id = #{resumeId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.smsm.pojo.ResumeExample">
    delete from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.smsm.pojo.Resume">
    insert into resume (resume_id, job_seeker_id, name, 
      sex, age, phone, email, 
      education, exception_job, job_exp
      )
    values (#{resumeId,jdbcType=VARCHAR}, #{jobSeekerId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{sex,jdbcType=CHAR}, #{age,jdbcType=INTEGER}, #{phone,jdbcType=INTEGER}, #{email,jdbcType=VARCHAR}, 
      #{education,jdbcType=CHAR}, #{exceptionJob,jdbcType=VARCHAR}, #{jobExp,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.smsm.pojo.Resume">
    insert into resume
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="resumeId != null">
        resume_id,
      </if>
      <if test="jobSeekerId != null">
        job_seeker_id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="phone != null">
        phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="exceptionJob != null">
        exception_job,
      </if>
      <if test="jobExp != null">
        job_exp,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="resumeId != null">
        #{resumeId,jdbcType=VARCHAR},
      </if>
      <if test="jobSeekerId != null">
        #{jobSeekerId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        #{phone,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=CHAR},
      </if>
      <if test="exceptionJob != null">
        #{exceptionJob,jdbcType=VARCHAR},
      </if>
      <if test="jobExp != null">
        #{jobExp,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.smsm.pojo.ResumeExample" resultType="java.lang.Long">
    select count(*) from resume
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update resume
    <set>
      <if test="record.resumeId != null">
        resume_id = #{record.resumeId,jdbcType=VARCHAR},
      </if>
      <if test="record.jobSeekerId != null">
        job_seeker_id = #{record.jobSeekerId,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=CHAR},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=INTEGER},
      </if>
      <if test="record.phone != null">
        phone = #{record.phone,jdbcType=INTEGER},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.education != null">
        education = #{record.education,jdbcType=CHAR},
      </if>
      <if test="record.exceptionJob != null">
        exception_job = #{record.exceptionJob,jdbcType=VARCHAR},
      </if>
      <if test="record.jobExp != null">
        job_exp = #{record.jobExp,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update resume
    set resume_id = #{record.resumeId,jdbcType=VARCHAR},
      job_seeker_id = #{record.jobSeekerId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      age = #{record.age,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=CHAR},
      exception_job = #{record.exceptionJob,jdbcType=VARCHAR},
      job_exp = #{record.jobExp,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update resume
    set resume_id = #{record.resumeId,jdbcType=VARCHAR},
      job_seeker_id = #{record.jobSeekerId,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=CHAR},
      age = #{record.age,jdbcType=INTEGER},
      phone = #{record.phone,jdbcType=INTEGER},
      email = #{record.email,jdbcType=VARCHAR},
      education = #{record.education,jdbcType=CHAR},
      exception_job = #{record.exceptionJob,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.smsm.pojo.Resume">
    update resume
    <set>
      <if test="jobSeekerId != null">
        job_seeker_id = #{jobSeekerId,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="phone != null">
        phone = #{phone,jdbcType=INTEGER},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=CHAR},
      </if>
      <if test="exceptionJob != null">
        exception_job = #{exceptionJob,jdbcType=VARCHAR},
      </if>
      <if test="jobExp != null">
        job_exp = #{jobExp,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where resume_id = #{resumeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.smsm.pojo.Resume">
    update resume
    set job_seeker_id = #{jobSeekerId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      age = #{age,jdbcType=INTEGER},
      phone = #{phone,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      education = #{education,jdbcType=CHAR},
      exception_job = #{exceptionJob,jdbcType=VARCHAR},
      job_exp = #{jobExp,jdbcType=LONGVARCHAR}
    where resume_id = #{resumeId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.smsm.pojo.Resume">
    update resume
    set job_seeker_id = #{jobSeekerId,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=CHAR},
      age = #{age,jdbcType=INTEGER},
      phone = #{phone,jdbcType=INTEGER},
      email = #{email,jdbcType=VARCHAR},
      education = #{education,jdbcType=CHAR},
      exception_job = #{exceptionJob,jdbcType=VARCHAR}
    where resume_id = #{resumeId,jdbcType=VARCHAR}
  </update>
</mapper>